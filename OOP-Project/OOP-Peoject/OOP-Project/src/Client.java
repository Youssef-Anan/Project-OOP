
import  java.util.Scanner;
import java.util.ArrayList;

public class Client extends User {
    ArrayList<SavingsAccount> SavingAccount=new ArrayList<SavingsAccount>();
    private   int TelephoneNumber;


    Scanner scanner=new Scanner(System.in);
    //////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////
    public Client() {}
    public Client(String firstName, String lastName, String username, String password, int telephoneNumber) {
        super(firstName, lastName, username, password);

        TelephoneNumber = telephoneNumber;
    }


    ////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////
    public void DisplayClientDetails(){
        System.out.println("The client id: "+getID());
        System.out.println("The client first name: "+getFirstName());
        System.out.println("The client last name: "+getLastName());
        System.out.println("The client last user name: "+getUsername());
        System.out.println("The client phone number: "+TelephoneNumber);


    }
    //////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    public void DisplayAccountDetails( int Account_ID)
    {
       for (int i=0;i<SavingAccount.size();i++){
//SavingAccount.add();
       }

    }
    //////////////////////////////////////////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    public void EditPersonalInformation(String NewFirstName, String NewLastName,int NewPhoneNumber)
    {
        setFirstName(NewFirstName);
        setLastName(NewLastName);
        TelephoneNumber=NewPhoneNumber;
        System.out.println("Personal information updated for " + getID());

    }
    //////////////////////////////////////////////////////////////////////////////////////////////////////
    ///////////////////////////////////////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////////////////////////////////////

    public void TransferMoney( double amount,Account sourceAcc,Account destinationAcc) {
        if (sourceAcc.getBalance() >= amount) {
            //sourceAcc.withdraw(amount);
            //destinationAcc.deposit(amount);
            System.out.println("Transfer successful.");
        } else {
            System.out.println("Insufficient funds for transfer.");
        }
    }
    ///////////////////////////////////////////////////////////////////////////////////////////////////////
    ///////////////////////////////////////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////////////////////////////////////
    public void ShowTransactionHistory()
    {
        System.out.println("Transaction History for " + getFirstName() + " " + getLastName() + " (ID: " + getID() + "):");
        // System.out.println(TransactionHistory);
    }


    ///////////////////////////////////////////////////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////
    public void TakeDeposit(double Amount,Account a) {
        try {

          a.balance += Amount;
            System.out.println("Deposited $" + Amount + ". New balance: $" + a.balance);


        } catch (Exception EX) {

            System.out.println("Invalid deposit amount. Amount must be greater than zero.");

        }
    }
    public void Withdraw(double amount,Account sourceAcc)
    {

    }


    public int getTelephoneNumber() {
        return TelephoneNumber;
    }

    public void setTelephoneNumber(int telephoneNumber) {
        TelephoneNumber = telephoneNumber;
    }


}
